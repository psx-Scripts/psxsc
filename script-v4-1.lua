-- This file was generated using Luraph Obfuscator v13.5.9

return(function(p0,M0,v0,B0,E0,c0,F0,V0,a0,d0,Z0,I0,n0,P0,t0,r0,G0,A0,u0,x0,i0,Q0,j0,R0,T0,s0,o0,S0,y0,Y0,J0,L0,D0,q0,U0,f0,h0,N0,z0,W0,H,...)local e,O0=assert,0;local T,m=nil,(nil);do while O0~=0X002 do if O0~=0X000 then m=A0;O0=0X00002;else T={[0X0]=0X00001};O0=0x1;end;end;end;O0=4;local X0,x,X,K,z=nil,nil,nil,nil,(nil);do repeat if O0<=0X1 then if O0==0X0000 then z=0X100000000;break;else K=r0;do O0=0X00;end;end;else if O0<=2 then X=a0;O0=1;else if O0~=3 then do X0={};end;do O0=0X3;end;else x=(E0 or bit32);O0=0X2;end;end;end;until false;end;local Z,g,E,u,r,A=setfenv,nil,nil,nil,nil,nil;local b=(select);for PQ=0X0,4 do do if PQ<=0x1 then do if PQ~=0X0000 then do E=v0;end;else g=V0;end;end;else do if PQ<=0X002 then u={t0,0x02,3};else if PQ==3 then do r=table.insert;end;else A=q0.rep;end;end;end;end;end;end;local c,L,K0,a=z-0X1,nil,nil,(nil);local v=U0;for zz=0X0,2 do if not(zz<=0X00)then if zz~=0X1 then a=W0;else K0={};end;else L=1;end;end;local q,W=j0,nil;for nV=0,0x1 do if nV~=0 then else W=Z0;end;end;local l,f,Y,w,d,D,F,J,R=nil,nil,nil,nil,nil,nil,nil,nil,(nil);local i=getfenv;do for KN=0,0X0000A do if not(KN<=0X4)then if KN<=7 then do if KN<=5 then else if KN~=0X6 then D=function()local f5,R5=0X0,(nil);do repeat if f5<=0 then R5=l(Y,L,L);f5=0X0001;else if f5~=1 then return R5;else L=L+1;f5=0X2;end;end;until(false);end;end;else Y=E(w(Y,0x5),"..",function(F6)if l(F6,0X2)==72 then d=m(w(F6,0X1,L0));return"";else local Wc=g(m(F6,16));if d then local rm=nil;do for L1=0,0X0002 do if not(L1<=0X0)then if L1~=0X00001 then do return rm;end;else do d=Y0;end;end;else rm=A(Wc,d);end;end;end;else return Wc;end;end;end);end;end;end;else do if KN<=8 then do F=2147483648;end;else if KN~=9 then R=F-1;else J=0X2^0X34;end;end;end;end;else if KN<=1 then if KN~=0X0 then f=(i and i()or i0);else l=string.byte;end;else do if KN<=2 then else do if KN==0X00003 thenelse w=f0;end;end;end;end;end;end;end;end;local t=(d0);O0=0X0005;local p,S,B,s,I=nil,nil,nil,nil,(nil);while O0<=5 do if O0<=0X00002 then if O0<=0 then s={[0X0]={[0X0]=0X0,L0,2,0x3,0X4,5,p0,0X7,0X008,0X9,10,11,0Xc,0X0D,0X00E,15},{[0X0]=0X00001,0X00000,0X3,2,0X5,0X0004,F0,6,9,z0,0Xb,0X000A,13,J0,0Xf,0XE},{[0X000]=2,3,0,L0,p0,0X00007,4,0X5,0XA,c0,8,R0,0Xe,0XF,12,13},{[0]=3,T0,0X00001,0X0,7,0X00006,0X5,0X04,0Xb,10,9,8,0X00f,0XE,13,12},{[0]=0X00004,0X0005,6,0X7,0,1,0X002,3,12,13,14,15,0X00008,0X00009,0XA,11},{[0]=t0,0X4,7,p0,0X1,0X0,0X03,0X02,13,J0,15,14,9,8,0XB,10},{[S0]=p0,7,4,0X5,2,3,0,L0,0X0E,15,0Xc,13,0X0a,0X000B,8,0X9},{[0]=7,p0,0X005,4,3,0x02,0x1,0X0,15,14,0X0000D,0XC,c0,0Xa,R0,0X8},{[0]=z0,R0,10,0x0000B,0X000C,0xd,14,15,0,0X1,2,3,4,5,6,7},{[S0]=9,0X08,c0,0XA,0Xd,0X000c,0X00f,0X0000E,1,0x0,3,T0,0X5,0X00004,7,0X0006},{[0]=10,11,8,0X009,0X0e,0xF,0Xc,13,T0,3,S0,1,6,0X7,0X0004,5},{[0X0]=0X0B,0XA,9,0X8,15,14,13,0XC,3,2,1,0,0X7,6,5,0X04},{[0x000]=J0,0Xd,0Xe,0x00f,8,9,0X000a,0X0000B,4,0x0005,6,F0,0,0x1,2,3},{[0X0000]=0XD,12,15,14,9,8,11,0XA,0X5,0X4,0X007,0X006,0X1,0,3,0X0002},{[0]=14,15,12,0xd,10,0XB,0X8,9,6,7,4,0X5,2,3,0X0,0X1},{[0X0]=0XF,0Xe,13,0X000C,0X000b,10,9,0x8,7,6,0x5,0X4,0X3,0X2,L0,S0}};O0=0x1;else if O0~=1 then S=function(wm,vm,Ym)local Hm=0X000;local xm=nil;repeat if not(Hm<=0)then if Hm==0x01 then xm=xm-xm%0X1;do Hm=2;end;else return xm;end;else xm=(wm/T[vm])%T[Ym];Hm=0X001;end;until false;end;O0=4;else I=function()local Mr=(p());local er=(p());if Mr==0X0 and er==0x00000 then return S0;end;local Rr,Nr,Ir,Br=nil,nil,nil,nil;do for fF=0,0x005 do if fF<=2 then if fF<=0X0 then Rr=(-0X1)^S(er,0X1F,0X1);else if fF==0x001 then Nr=S(er,20,11);else Ir=0X01;end;end;else do if fF<=0X3 then Br=S(er,0X0,0X14)*z+Mr;else if fF==0x004 then do if Nr==0X00 then if Br==0 then return Rr*0;else Nr=0x00001;Ir=S0;end;elseif Nr==2047 then if Br==0X0 then return Rr*(0x000/0X000);else return Rr*(0X0001/0);end;end;end;else return Rr*(T0^(Nr-1023))*(Br/J+Ir);end;end;end;end;end;end;end;O0=6;end;end;else if O0<=3 then do local Wf=(2);for Rg=1,0X01F do local Zg=0X1;do while Zg<2 do if Zg==0 then Wf=Wf*0x2;Zg=2;else(T)[Rg]=Wf;Zg=0;end;end;end;end;end;O0=2;else if O0~=4 then p=function()local Fr,qr,nr,ir=nil,nil,nil,(nil);for i8=0,2 do if i8<=0 then Fr,qr,nr,ir=l(Y,L,L+3);else if i8~=0X1 then return ir*16777216+nr*65536+qr*D0+Fr;else L=L+0x4;end;end;end;end;O0=3;else B=function()local Uq,qq=nil,nil;local bq=0X1;repeat if not(bq<=0X00000)then do if bq~=0x1 then if qq>=F then qq=qq-z;end;bq=0;else Uq,qq=p(),p();bq=2;end;end;else return qq*z+Uq;end;until(false);end;O0=0;end;end;end;end;local G,V=x and x[n0]or function(zk,Wk)do for kW=0X000,0X00001 do do if kW==0 then zk=zk%z;else do Wk=Wk%z;end;end;end;end;end;local dk=(nil);local wk=(0);local ak=(0);while-1799791116 do if ak<=0 then dk=0X1;ak=0X2;else if ak==1 then return wk+zk*dk+Wk*dk;else while zk>0X0 and Wk>S0 do local QO=0X1;local LO,KO=nil,nil;do while QO<2 do if QO~=0X0 then LO=zk%0x000010;QO=0X0;else KO=Wk%0X10;QO=0x2;end;end;end;do wk=wk+s[LO][KO]*dk;end;QO=0;while QO<0x3 do if QO<=0x0000 then do zk=(zk-LO)/16;end;QO=2;else if QO~=0x0001 then Wk=(Wk-KO)/0x10;do QO=0X01;end;else dk=dk*16;QO=0X003;end;end;end;end;ak=0X00001;end;end;end;end,(setmetatable);local M=x and x[B0]or function(Zn,xn)for ky=0,2 do if not(ky<=0X000)then if ky==0X01 then xn=xn%z;else return((Zn+xn)-G(Zn,xn))/0x00002;end;else Zn=Zn%z;end;end;end;local Q=(x and x.bor or function(qW,rW)qW=qW%z;rW=rW%z;return c-M(c-qW,c-rW);end);local y,N,o=x and x.bnot or function(eh)do return c-(eh%z);end;end,x and x[I0],x and x.rshift;N=N or function(K_,W_)local v_=0X2;do while"/"do if v_<=0X0 then return(K_*T[W_])%z;else if v_==1 then if W_<0X000 then return o(K_,-W_);end;v_=0X00000;else if not(W_>=0X20)then else return 0X0;end;do v_=1;end;end;end;end;end;end;O0=0X002;local j,h,P,k,C=nil,nil,nil,nil,(nil);do while O0<=5 do if O0<=0x00002 then do if not(O0<=0X0000)then do if O0~=1 then j=s0 or x0;O0=4;else k=M0;O0=0;end;end;else C=Q0;O0=6;end;end;elseif O0<=3 then P=function()local TP=0x000;local FP=0X0;while true do local RA=(l(Y,L,L));do L=L+0X1;end;FP=Q(FP,N(M(RA,127),TP));do if M(RA,0x80)==0X0 then return FP;end;end;TP=TP+0X7;end;end;O0=1;else if O0~=0x0004 then do h={[2]=7,[8]=9,[5]=0X6,[0X3]=G0,[0X4]=F0,[0X000]=1,[0X06]=0X7,[1]=z0};end;do O0=0X003;end;else o=o or function(vK,rK)do if rK>=32 then do return 0;end;end;end;do if rK<0X000 then do return N(vK,-rK);end;end;end;local TK=(nil);for lI=0,1 do if lI==0 then TK=(vK%z/T[rK]);else return TK-TK%0x01;end;end;end;O0=0X5;end;end;end;end;local H0=D();local U=(coroutine.wrap);local e0=D();local b0=function(Ev)local Lv={l(Y,L,L+3)};local Vv=G(Lv[0X1],e0);local iv=G(Lv[2],e0);local av=(G(Lv[0X3],e0));local mv=G(Lv[0X4],e0);for w5=0X0,2 do if w5<=0 then e0=(57*e0+Ev)%256;else do if w5==0X1 then L=L+0X00004;else return mv*16777216+av*65536+iv*0X0000100+Vv;end;end;end;end;end;local C0=function(...)do return b("#",...),{...};end;end;local k0=(0X0001);O0=0;local m0,O,w0,l0=nil,nil,nil,(nil);repeat if not(O0<=1)then if O0<=2 then O=function()local Kd,Qd=0,nil;while(true)do do if Kd<=0 then Qd=P();Kd=1;else if Kd==1 then if Qd>R then do return Qd-z;end;end;Kd=2;else return Qd;end;end;end;end;end;O0=1;else if O0~=0X3 then function l0()local Ka,ia,Ta,ea,Ba,Ga,ya,Wa,ma=0X0003,nil,nil,nil,nil,nil,nil,nil,(nil);while Ka<=18 do if not(Ka<=8)then if Ka<=13 then if Ka<=0XA then if Ka~=9 then ia={};do Ka=0Xe;end;else(ea)[N0]=D();do Ka=0X008;end;end;else if not(Ka<=0X0B)then if Ka==0xC then Ba=1;Ka=0X4;else for GW=1,ya do local bW=0x1;local WW,DW,SW=nil,nil,nil;do repeat do if not(bW<=1)then if bW~=0X2 then do DW=p();end;do bW=0X0000;end;else for bq=WW,DW do ea[0X02][bq]=SW;end;bW=0X4;end;else if bW~=0 then WW=p();bW=3;else SW=p();bW=2;end;end;end;until bW>0X3;end;end;Ka=0x5;end;else ea={nil,{},nil,nil,nil,Y0,nil,{},{}};Ka=0XC;end;end;else if not(Ka<=15)then if not(Ka<=16)then if Ka==0X00011 then ea[0X001]=P();Ka=16;else do ya=p();end;do Ka=0X0d;end;end;else(ea)[6]=Wa;Ka=7;end;else do if Ka~=14 then do ea[14]=D();end;Ka=0x000011;else do Ta={};end;Ka=0xB;end;end;end;end;else if not(Ka<=3)then if Ka<=5 then if Ka~=4 then do Wa={};end;Ka=15;else do ea[13]=D();end;Ka=0x002;end;else if not(Ka<=0X6)then if Ka~=7 then do(ea)[13]=p();end;Ka=0X12;else for bn=0X1,P()do Wa[bn]={D(),P()};end;Ka=0;end;else(ea)[0X5]=S(Ga,2,L0)~=0X0000;Ka=9;end;end;else if Ka<=1 then if Ka==0 then do ma=p()-o0;end;Ka=0x13;else ea[3]=S(Ga,1,1)~=0;do Ka=0x06;end;end;else if Ka~=0X2 then Ka=10;else Ga=D();do Ka=1;end;end;end;end;end;end;Ka=1;local oa,Ea,Oa=nil,nil,nil;repeat if Ka<=0X00001 then if Ka==0 then Oa=p()-92188;Ka=0x5;else oa=D();Ka=2;end;else if not(Ka<=0X0002)then if Ka==0X3 then do ea[0x0000C]=D();end;Ka=0X0;else for tY=0X001,ma do local JY=0x3;local gY,RY=nil,(nil);repeat do if JY<=1 then if JY==0X0 then if RY==0X4d then gY=u0;elseif RY==186 then gY=w(m0(oa),t0);elseif RY==0x091 then do gY=p();end;elseif RY==253 then gY=B();elseif RY==29 then gY=I();elseif RY==209 then gY=B();elseif RY==0X28 then gY=w(m0(oa),D());elseif RY==0X48 then gY=h0;elseif RY==7 then gY=I();elseif RY==58 then gY=I()+p();end;JY=0x04;else RY=D();JY=0X2;end;else if JY==0X2 then ia[tY-L0]=Ba;do JY=0X00;end;else gY=Y0;JY=1;end;end;end;until JY>3;local aY={gY,{}};do(Ta)[Ba]=aY;end;JY=0;while JY<0X002 do if JY==0X0000 then do Ba=Ba+1;end;JY=0X0001;else if not(Ea)then else do X0[k0]=aY;end;k0=k0+1;end;JY=0X2;end;end;end;Ka=0X3;end;else do Ea=D()~=0X0;end;Ka=4;end;end;until Ka==0x005;local La=ea[0X8];local ba=ea[0X009];Ka=2;local ca=nil;repeat if not(Ka<=0X1)then if Ka==0X00002 then for dj=0,Oa-1 do La[dj]=l0();end;do Ka=0X00;end;else(ea)[13]=D();Ka=4;end;else do if Ka==0 then ca=p()-0X05e12;Ka=1;else for Sk=0X1,ca do ba[Sk]={[3]=O(),[1]=P(),[0X0005]=O(),[0x02]=O(),[6]=D(),[4]=D(),[7]=D()};end;Ka=0X3;end;end;end;until Ka==0X4;ea[0X7]=P();Ka=3;repeat if not(Ka<=0X01)then do if Ka~=0X02 then for qk=0X00001,ca do local sk=(nil);for Yg=0,0X1 do if Yg==0 then sk=ea[0X009][qk];else for KB,JB in P0(u)do local uB,mB,aB=0X0001,nil,(nil);while(true)do if not(uB<=0x0000)then if uB~=1 then aB=sk[mB];uB=0X0;else mB=h[JB];do uB=2;end;end;else if aB==0X01 then local Zy,zy=nil,nil;for xq=0X00,0X2 do do if not(xq<=0)then if xq==0X1 then do zy=Ta[Zy];end;else if zy then do sk[mB]=zy[0x1];end;local YL=(zy[2]);(YL)[#YL+1]={sk,mB};end;end;else Zy=ia[sk[JB]];end;end;end;elseif aB==0Xc then do sk[JB]=qk+sk[JB]+1;end;end;break;end;end;end;end;end;end;Ka=0;else(ea)[0x4]=P();do Ka=0X1;end;end;end;else if Ka~=0 then return ea;else ea[15]=p();Ka=2;end;end;until(false);end;break;else function w0(ba,aa,da)local Pa=(da[0X009]);local Ba=(da[0X001]);local Ra,ga,oa=da[0X02],da[3],da[0X5];local Za=(da[0X8]);local pa=da[0x4];local ya=V({},{__mode="v"});local Ca,la=da[0X7],(nil);la=function(...)local MX=({});local GX=(0X1);local aX=(0X0);local gX={[0X2]=da,[1]=MX};local mX=(i and i()or _ENV);local yX,oX=C0(...);local zX=((mX==f and ba or mX));do yX=yX-1;end;for Q6=0X0,yX do if not(Ba>Q6)then break;else MX[Q6]=oX[Q6+1];end;end;if not ga then oX=nil;elseif oa then MX[Ba]={n=yX>=Ba and yX-Ba+1 or 0x0,j(oX,Ba+0X1,yX+1)};end;if zX==mX then else do if not(Z)then _ENV=zX;else Z(la,zX);end;end;end;local WX,UX,RX,IX=C(function()while true do local KT=(Pa[GX]);local ET=(KT[0x1]);GX=GX+1;if ET>=0X002D then if ET<0X44 then if ET>=56 then if not(ET>=0X3e)then if ET<0X00003b then if ET<0X39 then local eS=KT[0X3];local DS,RS=MX[eS],(KT[0X005]-0x1)*50;for GM=1,aX-eS do DS[RS+GM]=MX[eS+GM];end;else if ET==58 then repeat local iJ,yJ=ya,MX;if not(#iJ>0)then else local Jz={};for bh,nh in q,iJ do do for Ti,wi in q,nh do do if wi[0X1]==yJ and wi[0X2]>=0 then local o4=(wi[0X00002]);if not(not Jz[o4])then else(Jz)[o4]={yJ[o4]};end;(wi)[1]=Jz[o4];do wi[0X002]=0X1;end;end;end;end;end;end;end;until true;return true,KT[3],0X01;else MX[KT[0X3]][MX[KT[2]]]=MX[KT[0X5]];end;end;else if not(ET<0X3C)then do if ET==61 then(MX)[KT[0X3]]=K0[KT[2]];else local Dt=KT[3];local Rt,ot=MX[Dt]();if Rt then for sU=1,KT[0x5]do do MX[Dt+sU]=ot[sU];end;end;GX=KT[0X0002];end;end;end;else local DY=aa[KT[0x2]];DY[1][DY[0x00002]]=MX[KT[0X0003]];end;end;else do if ET<0X41 then do if not(ET<63)then if ET~=0X040 then(MX)[KT[0X3]]=o(MX[KT[2]],MX[KT[0X00005]]);else do zX[KT[0X007]]=MX[KT[0X3]];end;end;else MX[KT[0x03]]=MX[KT[2]]<=MX[KT[0X05]];end;end;else if not(ET<66)then if ET~=67 then if not(MX[KT[0X2]]<=KT[6])then GX=KT[0X3];end;else local Vj=(KT[0X0002]);do(MX)[KT[3]]=MX[Vj]..MX[Vj+1];end;end;else do repeat local w6,o6=ya,MX;if not(#w6>0)then else local w3=({});for r1,i1 in q,w6 do for Y7,L7 in q,i1 do if not(L7[1]==o6 and L7[0x02]>=0X00000)then else local oD=L7[0X00002];if not w3[oD]then w3[oD]={o6[oD]};end;(L7)[1]=w3[oD];L7[0x2]=0X1;end;end;end;end;until true;end;do return;end;end;end;end;end;else if ET<50 then do if not(ET>=0X002f)then if ET~=0X2E then local mW=KT[3];local VW=(KT[0X5]-0X1)*50;local BW=MX[mW];for x7=0x1,KT[0X2]do(BW)[VW+x7]=MX[mW+x7];end;else if not(MX[KT[2]]<MX[KT[0X0005]])then GX=KT[0X3];end;end;else if not(ET<48)then if ET==0x31 then do gX[KT[2]]=MX[KT[3]];end;else(MX)[KT[3]]=M(MX[KT[2]],MX[KT[0X05]]);end;else MX[KT[3]]=MX[KT[2]]-MX[KT[5]];end;end;end;else if ET<0X35 then if ET<0X33 then(MX[KT[0X003]])[MX[KT[2]]]=KT[6];else if ET~=52 then MX[KT[3]]=MX[KT[0X2]]+MX[KT[5]];else local Yu=(KT[3]);MX[Yu](MX[Yu+1]);do aX=Yu-1;end;end;end;else if ET<0X36 then local v3=KT[0X0003];local r3=KT[2];local Z3=(KT[5]);do if r3~=0x0 then aX=v3+r3-0X0001;end;end;local J3,U3=nil,nil;if r3==1 then J3,U3=C0(MX[v3]());else J3,U3=C0(MX[v3](j(MX,v3+0X1,aX)));end;if Z3==1 then aX=v3-0X01;else do if Z3~=0X0 then J3=v3+Z3-0X2;aX=J3+0x1;else J3=J3+v3-1;aX=J3;end;end;local Js=0;for lh=v3,J3 do Js=Js+1;MX[lh]=U3[Js];end;end;else if ET~=55 then local Ky=(KT[0X0003]);local ry=U(function(...)(W)();for rT in...do(W)(true,rT);end;end);(ry)(MX[Ky],MX[Ky+0x1],MX[Ky+2]);aX=Ky;MX[Ky]=ry;do GX=KT[0x0002];end;else MX[KT[3]]=MX[KT[2]]>=MX[KT[5]];end;end;end;end;end;else if not(ET<0X4F)then if not(ET>=0x0055)then do if not(ET>=82)then if ET<0X50 then do MX[KT[0X3]]=KT[0X0007];end;else if ET==81 then MX[KT[0X03]]=G(MX[KT[0x2]],MX[KT[5]]);else MX[KT[3]]=MX[KT[0X2]]%KT[6];end;end;else if not(ET>=83)then local Uq=(KT[3]);(MX)[Uq]=MX[Uq](j(MX,Uq+0X001,aX));do aX=Uq;end;else if ET~=0x0054 then local ir=aa[KT[0x02]];do MX[KT[0x03]]=ir[1][ir[2]];end;else do MX[KT[3]]=MX[KT[2]]/MX[KT[0X005]];end;end;end;end;end;else if not(ET<0X000058)then if ET>=0X59 then if ET~=90 then local tB=Za[KT[2]];local ZB=(tB[6]);local sB=nil;local vB=#ZB;if vB>0X0 then sB={};for NZ=1,vB do local YZ=ZB[NZ];if YZ[0x001]==0X0000 then(sB)[NZ-0X1]={MX,YZ[2]};else(sB)[NZ-1]=aa[YZ[0X02]];end;end;(r)(ya,sB);end;do MX[KT[0X3]]=w0(zX,sB,tB);end;else if not(MX[KT[2]]<MX[KT[0X05]])then else GX=KT[3];end;end;else(MX)[KT[3]]=gX[KT[0x2]];end;else if not(ET>=0x56)then do MX[KT[0X3]]=#MX[KT[2]];end;else if ET~=0x57 then(MX)[KT[3]]=N(MX[KT[2]],MX[KT[5]]);else MX[KT[3]]={j({},1,KT[0X02])};end;end;end;end;else if ET<0X049 then if not(ET>=0x46)then if ET==0X0045 then do if KT[0X5]==0X026 then GX=GX-0X0001;(Pa)[GX]={[0X3]=(KT[0X003]-143),[0X1]=0X4B,[2]=(KT[2]-143)};else do repeat local Bg,Wg,Sg=ya,MX,KT[0X0003];if#Bg>0X0 then local qU=({});for D1,S1 in q,Bg do do for vQ,xQ in q,S1 do if not(xQ[0x1]==Wg and xQ[0X2]>=Sg)then else local gz=(xQ[0X2]);do if not(not qU[gz])then else(qU)[gz]={Wg[gz]};end;end;(xQ)[1]=qU[gz];xQ[2]=1;end;end;end;end;end;until true;end;end;end;else(MX)[KT[3]]=MX[KT[0X2]]==MX[KT[5]];end;else if ET<71 then do(K0)[KT[2]]=MX[KT[0x3]];end;else do if ET~=72 then do aX=KT[0X3];end;(MX)[aX]=MX[aX]();else(MX)[KT[3]]=false;end;end;end;end;else if ET<0X4C then if not(ET<74)then if ET~=75 then local FN=KT[3];aX=FN+KT[0X02]-0X1;MX[FN](j(MX,FN+0x01,aX));aX=FN-1;else local Hx,ix=KT[3],yX-Ba;if ix<0 then ix=-0X1;end;for tw=Hx,Hx+ix do MX[tw]=oX[Ba+(tw-Hx)+1];end;do aX=Hx+ix;end;end;else do MX[KT[3]]=MX[KT[2]]>MX[KT[0X5]];end;end;else if ET<0X4D then MX[KT[3]]=MX[KT[2]]^MX[KT[5]];else do if ET==78 then if not MX[KT[0X03]]then GX=KT[2];end;else do if MX[KT[0X2]]==KT[6]then else do GX=KT[0x003];end;end;end;end;end;end;end;end;end;end;else if ET<22 then if not(ET>=0X0b)then if not(ET>=5)then if ET>=2 then do if not(ET<3)then if ET~=4 then do(MX)[KT[0x00003]]=MX[KT[0X2]]~=KT[0X0006];end;else if KT[5]~=150 then if MX[KT[3]]then GX=KT[2];end;else do GX=GX-1;end;do(Pa)[GX]={[0X0003]=(KT[0X03]-0X47),[0X1]=0X0000,[0X2]=(KT[2]-0X00047)};end;end;end;else local m8=(KT[0X003]);local S8,j8=MX[m8]();if S8 then GX=KT[2];(MX)[m8+0X3]=j8;end;end;end;else if ET~=1 then do MX[KT[0X3]]=MX[KT[0X002]];end;else local Bj=(KT[0X3]);local Wj=(U(function(...)(W)();for Ga,Ya in...do W(true,Ga,Ya);end;end));Wj(MX[Bj],MX[Bj+1],MX[Bj+0x2]);aX=Bj;do MX[Bj]=Wj;end;GX=KT[2];end;end;else if not(ET>=0X8)then do if not(ET<0X6)then if ET==0x7 then do repeat local Ee,je=ya,(MX);if not(#Ee>0X0000)then else local kF=({});do for Uy,uy in q,Ee do for XH,VH in q,uy do do if not(VH[1]==je and VH[2]>=0)then else local fj=VH[0X2];if not(not kF[fj])then else do(kF)[fj]={je[fj]};end;end;do VH[1]=kF[fj];end;do VH[0X0002]=0x1;end;end;end;end;end;end;end;until true;end;local ON=KT[0X03];return false,ON,ON+KT[2]-2;else(MX)[KT[0X03]]=zX[KT[0X07]];end;else(MX)[KT[0x3]]=true;end;end;else if ET<0x9 then MX[KT[0X3]]=y(MX[KT[2]]);else if ET~=0xA then if not(MX[KT[2]]<=MX[KT[0X5]])then else do GX=KT[0X3];end;end;else local WZ=KT[3];MX[WZ](MX[WZ+1],MX[WZ+2]);do aX=WZ-0x0001;end;end;end;end;end;else do if not(ET>=16)then do if not(ET>=13)then if ET==12 then local Qa=(MX[KT[2]]/MX[KT[5]]);do(MX)[KT[3]]=Qa-Qa%1;end;else if KT[5]==44 then do GX=GX-1;end;(Pa)[GX]={[0X2]=(KT[0X0002]-0X0e7),[1]=0X01D,[0X03]=(KT[0x3]-0xE7)};elseif KT[5]==253 then do GX=GX-1;end;(Pa)[GX]={[3]=(KT[3]-3),[1]=0X18,[0X2]=(KT[0X2]-0X3)};else repeat local WZ,BZ=ya,(MX);if#WZ>0X0 then local Jf={};do for qb,Kb in q,WZ do for dJ,GJ in q,Kb do do if GJ[1]==BZ and GJ[2]>=0 then local kn=(GJ[2]);if not(not Jf[kn])then else Jf[kn]={BZ[kn]};end;(GJ)[1]=Jf[kn];GJ[0X2]=0X1;end;end;end;end;end;end;until true;return false,KT[3],aX;end;end;else if not(ET<14)then if ET==0x0000F then local bh=KT[0X03];(MX[bh])(j(MX,bh+0X1,aX));do aX=bh-0x01;end;else if not(MX[KT[2]]<=MX[KT[0X0005]])then GX=KT[3];end;end;else if MX[KT[0X2]]~=KT[0X6]then else GX=KT[0X03];end;end;end;end;else if ET>=0X13 then do if not(ET<20)then do if ET~=21 then do GX=KT[2];end;else local IB,LB=KT[0X3],KT[0X2];do aX=IB+LB-1;end;do repeat local lQ,xQ=ya,MX;do if#lQ>0X00000 then local QL={};do for By,Ky in q,lQ do for aS,ES in q,Ky do if ES[0x1]==xQ and ES[0X2]>=0 then local Wc=(ES[0X0002]);if not QL[Wc]then QL[Wc]={xQ[Wc]};end;ES[1]=QL[Wc];ES[2]=0X1;end;end;end;end;end;end;until true;end;return true,IB,LB;end;end;else local Gl=(KT[0X3]);local Pl,jl,yl=MX[Gl],MX[Gl+0X01],MX[Gl+0X2];(MX)[Gl]=U(function()for qo=Pl,jl,yl do(W)(true,qo);end;end);GX=KT[2];end;end;else if ET<17 then local mI=(KT[3]);do MX[mI]=MX[mI](MX[mI+0X1]);end;do aX=mI;end;else if ET~=18 then MX[KT[0X003]]=MX[KT[2]][MX[KT[5]]];else MX[KT[3]][KT[0x7]]=KT[6];end;end;end;end;end;end;else if not(ET<0x000021)then if ET<39 then if ET<36 then if not(ET<34)then do if ET~=35 then local wN=KT[0X3];local uN,zN,LN=MX[wN]();do if not(uN)then else MX[wN+0X1]=zN;(MX)[wN+0X2]=LN;GX=KT[2];end;end;else repeat local LN,sN=ya,MX;if#LN>0X0 then local It=({});for s3,H3 in q,LN do for ey,Fy in q,H3 do do if not(Fy[0X1]==sN and Fy[0x2]>=0)then else local Xi=(Fy[2]);if not(not It[Xi])then else It[Xi]={sN[Xi]};end;do Fy[1]=It[Xi];end;do Fy[0X2]=1;end;end;end;end;end;end;until true;return true,KT[0X3],0;end;end;else local HD=(KT[3]);local WD,JD=MX[HD]();if WD then(MX)[HD+0X00001]=JD;GX=KT[2];end;end;else if not(ET<37)then if ET~=38 then aX=KT[3];MX[aX]();aX=aX-0X1;else local mJ=(KT[0x2]);local IJ=(MX[mJ]);for CU=mJ+1,KT[5]do do IJ=IJ..MX[CU];end;end;do MX[KT[0x3]]=IJ;end;end;else if MX[KT[0X00002]]==MX[KT[5]]then GX=KT[0X3];end;end;end;else if ET<0X002a then if ET<40 then(MX)[KT[3]]=Q(MX[KT[2]],MX[KT[0X5]]);else if ET~=0X00029 then local mo=KT[0X3];MX[mo]=MX[mo](MX[mo+1],MX[mo+2]);do aX=mo;end;else do(MX)[KT[3]]=MX[KT[2]]%MX[KT[0X5]];end;end;end;else if ET>=43 then if ET~=44 then if MX[KT[2]]~=MX[KT[5]]then GX=KT[0X3];end;else do(MX[KT[3]])[KT[0X7]]=MX[KT[0X5]];end;end;else if not(KT[0X007]<=MX[KT[0X5]])then GX=KT[3];end;end;end;end;else do if not(ET<27)then if not(ET>=0x00001e)then if ET>=28 then if ET~=0X0001d then MX[KT[3]]=MX[KT[0X2]]*MX[KT[5]];else if KT[5]==52 then GX=GX-1;(Pa)[GX]={[1]=11,[2]=(KT[0X002]-10),[3]=(KT[0X3]-0Xa)};elseif KT[5]~=0X000099 then do for nV=KT[3],KT[2]do do MX[nV]=nil;end;end;end;else GX=GX-0X1;(Pa)[GX]={[2]=(KT[0X2]-220),[0X1]=65,[0X03]=(KT[0X03]-220)};end;end;else local DG,pG=KT[0X00003],MX[KT[0X2]];do MX[DG+1]=pG;end;(MX)[DG]=pG[KT[6]];end;else if not(ET<0X1f)then if ET~=0X0020 then do(MX)[KT[0X3]]=MX[KT[0X2]]<MX[KT[0X0005]];end;else do if KT[5]==37 then GX=GX-0X001;(Pa)[GX]={[0X2]=(KT[2]-0xBE),[1]=11,[3]=(KT[0X00003]-0X0000BE)};elseif KT[0X0005]~=247 then(MX)[KT[3]]=-MX[KT[2]];else GX=GX-1;(Pa)[GX]={[0X2]=(KT[0X0002]-230),[1]=65,[3]=(KT[3]-230)};end;end;end;else if KT[5]~=0X000F1 then repeat local kz,lz=ya,(MX);if#kz>0X00 then local ux={};for pi,ii in q,kz do for sQ,aQ in q,ii do if aQ[0x1]==lz and aQ[0X2]>=0X0 then local ys=(aQ[2]);if not ux[ys]then do ux[ys]={lz[ys]};end;end;(aQ)[1]=ux[ys];(aQ)[0X2]=1;end;end;end;end;until true;local x_=(KT[0X003]);do return false,x_,x_;end;else GX=GX-1;(Pa)[GX]={[0x2]=(KT[2]-0X2),[3]=(KT[0X3]-0X2),[1]=0};end;end;end;else do if ET>=24 then if not(ET<25)then do if ET==26 then if KT[5]~=0XdE then do MX[KT[3]]=not MX[KT[0x002]];end;else GX=GX-1;(Pa)[GX]={[2]=(KT[2]-187),[0X3]=(KT[0X3]-187),[0X1]=65};end;else(MX)[KT[0X00003]]=MX[KT[0X2]][KT[0X006]];end;end;else if KT[0X005]==60 then do GX=GX-0X00001;end;Pa[GX]={[1]=0X20,[0X3]=(KT[3]-157),[0x002]=(KT[2]-157)};elseif KT[0X5]~=0X000d2 then MX[KT[3]]=nil;else GX=GX-1;do(Pa)[GX]={[0x00002]=(KT[0x2]-0X0052),[1]=0x000055,[3]=(KT[3]-0X00052)};end;end;end;else if ET==23 then do MX[KT[3]]={};end;else(MX)[KT[0x3]]=MX[KT[0x2]]~=MX[KT[5]];end;end;end;end;end;end;end;end;end;end);if not(WX)then if X(UX)~="st\114in\103"then K(UX,0);else if not(a(UX,'a\116te\109\112t \116o \121\105e\108d\032\097\099\114o\115\115\032\109\101ta\109\101\116\104o\100\047C%\045c\097ll \098ou\110d\097ry'))then else return coroutine.yield();end;do if not(a(UX,"^.-:%d+: "))then(K)(UX,0x0);else K("Luraph Script:"..(Ra[GX-1]or"(internal)")..': '..k(UX),0);end;end;end;else if UX then if IX~=1 then return MX[RX](j(MX,RX+0X1,aX));else do return MX[RX]();end;end;elseif RX then return j(MX,RX,IX);end;end;end;if not(Z)then else(Z)(la,ba);end;return la;end;O0=4;end;end;elseif O0~=0X0 then O0=3;else m0=function(DP)local GP,hP,oP=1,nil,(nil);while GP<0X00002 do if GP~=0X00 then hP=p();GP=0X00000;else do oP="";end;GP=2;end;end;GP=2;while(true)do if not(GP<=0)then do if GP~=1 then do for SH=1,hP,7997 do local wH,tH=nil,nil;local dH=(0x3);repeat if not(dH<=1)then do if dH~=2 then wH=SH+7997-1;dH=0X2;else do if not(wH>hP)then else wH=hP;end;end;dH=0;end;end;else if dH==0 then tH={l(Y,L+SH-0X1,L+wH-0x1)};dH=0X0001;else for TD=1,#tH do local MD=0x001;repeat if MD~=0 then(tH)[TD]=G(tH[TD],H0);MD=0;else do H0=(DP*H0+y0)%256;end;break;end;until(false);end;do dH=4;end;end;end;until dH>0X3;oP=oP..g(j(tH));end;end;GP=1;else L=L+hP;GP=0;end;end;else return oP;end;end;end;O0=0X2;end;until false;local g0=l0();do O0=2;end;repeat if O0<=0x0 then return w0(f,Y0,g0)(...);else do if O0==0X0001 then X0=nil;O0=0;else(K0)[2]=X0;O0=1;end;end;end;until(false);end)(0x6,tostring,string.gsub,'b\097\110\100',bit,0X0b,0X7,string.char,type,rawset,coroutine.yield,"\108shi\102\116",'\098\120\111\114',ipairs,0X0005,error,4,tonumber,true,table.unpack,_ENV,pcall,next,9,0X002,unpack,0X15478,0x0,0XC1,nil,0X00c,0x0001,0X0000100,string,rawget,string.sub,false,0XA,0X8,string.match,{18352,0xa9445CD6,2829245208,0X6E48b243,1098002596,0x0fa516589,0X00356D8C14,3704909773,1195377142},...);
