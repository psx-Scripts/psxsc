-- This file was generated using Luraph Obfuscator v13.5.9

return(function(zM,XM,sM,SM,MM,EM,lM,IM,rM,BM,jM,UM,AM,tM,nM,OM,cM,ZM,YM,QM,uM,vM,aM,VM,TM,xM,kM,RM,fM,LM,oM,qM,hM,bM,p,...)local d,CM,i,b=EM,0,nil,nil;local P=(select);while CM<=1 do if CM~=0X00000 then do b=qM;end;CM=2;else i=RM;CM=1;end;end;local O,g=0X0000100000000,(error);local Q=coroutine.wrap;local e,E,w=nil,nil,nil;for jo=0x0,0X00002 do if jo<=0x0000 then e=SM.byte;else if jo==0x00001 then do E=string.rep;end;else w=oM;end;end;end;local o,s,j,l=setmetatable,rawset,O-0X00001,(sM or bit32);local q=(xM);CM=0;local S,R=nil,(nil);while CM<0X2 do do if CM~=0 then R=string.gsub;CM=2;else do S=YM.insert;end;CM=0X1;end;end;end;CM=0x00000;local K,c=nil,nil;while-0X37691D8A do do if CM~=0x0 then do c=0x001;end;break;else K=QM;CM=1;end;end;end;local N=type;CM=0X00005;local B,I,u,t=nil,nil,nil,nil;repeat if CM<=2 then if CM<=0 then do I=BM;end;CM=2;else if CM~=0x1 then u=(I and I()or bM);do CM=0X1;end;else CM=0X003;end;end;else if CM<=3 then t={[0X0]=0X1};do CM=6;end;else if CM~=0X4 then do B=aM or YM.unpack;end;CM=4;else CM=0;end;end;end;until CM>=0x00006;local h,y=IM,({0x7,6,uM});local Z=nil;do h=R(K(h,cM),"..",function(WM)do if e(WM,2)==0X000048 then for Lj=0,0X1 do do if Lj~=0x00 then do return"";end;else Z=i(K(WM,0x1,0X1));end;end;end;else local HT=1;local eT=(nil);while HT<0X2 do do if HT~=0 then do eT=w(i(WM,16));end;HT=0X00;else if Z then local Ht=0X00000;local Rt=nil;repeat if Ht==0 then do Rt=E(eT,Z);end;Ht=0X1;else Z=nil;Ht=0x2;end;until Ht>0X001;do return Rt;end;else do return eT;end;end;HT=2;end;end;end;end;end;end);end;local V=function()local iu=nil;for FG=0X0,2 do if FG<=0 then do iu=e(h,c,c);end;else if FG~=0X1 then return iu;else c=c+uM;end;end;end;end;local f=0X2^0X34;local NM=({});local m={[0X00004]=1,[0x4]=4,[0X7]=0x3,[8]=3,[0x6]=nM,[2]=0X4,[1]=0X05,[0X5]=7};local v=(2147483648);local dM=function(...)return P('#',...),{...};end;do CM=0;end;local U,X,L=nil,nil,nil;do repeat if CM<=1 then do if CM==0 then U=v-0X1;CM=2;else X=function(F4,o4,s4)local e4,A4=0X0,(nil);do repeat if not(e4<=0x0000)then if e4==1 then return A4;else A4=A4-A4%1;e4=1;end;else A4=(F4/t[o4])%t[s4];e4=2;end;until false;end;end;CM=0X3;end;end;else if CM==2 then do local K_=nil;local e_=(1);do repeat if e_==0 then do for B3=0x1,31 do for WI=0X0,1 do if WI~=0X0 then do K_=K_*0X2;end;else t[B3]=K_;end;end;end;end;break;else K_=0x2;e_=0;end;until false;end;end;do CM=0X001;end;else do L=function()local ut,Pt,rt,Tt=nil,nil,nil,(nil);for Bx=0x000,2 do do if Bx<=0X00000 then do ut,Pt,rt,Tt=e(h,c,c+3);end;else if Bx==1 then c=c+0X0004;else return Tt*16777216+rt*0X0010000+Pt*256+ut;end;end;end;end;end;end;break;end;end;until(false);end;CM=1;local k,z=nil,(nil);while CM~=0x2 do do if CM==0 then z=function()local jq=(L());local Bq,Hq,Oq,Jq,Iq,Yq=0X00001,2,nil,nil,nil,(nil);repeat if Hq<=2 then if not(Hq<=0X0000)then do if Hq~=1 then Oq=L();do Hq=4;end;else Jq=(-1)^X(Oq,0x0001f,uM);Hq=0;end;end;else Iq=X(Oq,hM,11);do Hq=0X3;end;end;elseif not(Hq<=3)then if Hq~=0X4 then if Iq==0X0 then if Yq==0X0 then return Jq*0X0;else local yM=0;while(true)do if yM==0 then Iq=0x1;yM=1;else Bq=0;do break;end;end;end;end;elseif Iq==0X07ff then do if Yq~=0x0 then return Jq*(0x01/0X0);else return Jq*(0/0x0);end;end;end;Hq=0X6;else if not(jq==0X00 and Oq==0)then else return 0;end;Hq=1;end;else Yq=X(Oq,0X000,0X14)*O+jq;Hq=0X5;end;until Hq>=6;do return Jq*(0X02^(Iq-ZM))*(Yq/f+Bq);end;end;do CM=0X2;end;else do k=function()local ZV,aV=nil,nil;local eV=0;repeat if not(eV<=0X000)then if eV==0x1 then if aV>=v then aV=aV-O;end;eV=2;else return aV*O+ZV;end;else ZV,aV=L(),L();eV=1;end;until(false);end;end;CM=0;end;end;end;local A={[0x0]={[0X0]=0,uM,0x2,0X3,VM,5,0X00006,7,8,9,0XA,11,12,13,0Xe,15},{[0]=0X001,0,0X3,0X0002,0X5,4,7,6,0X9,8,11,LM,0Xd,0X000C,0xF,14},{[0]=0x02,3,0x000,0X1,6,7,0X4,0X00005,0XA,0XB,0X0008,9,0X0e,0Xf,12,0Xd},{[0]=3,0X0002,uM,0X0,0X7,6,cM,4,11,10,9,0X8,15,0X0e,13,vM},{[0]=4,5,6,0X7,0,0x01,0x0002,3,12,13,14,15,0X8,9,0x000A,11},{[0x0]=5,VM,7,0X00006,1,0,0X00003,0X2,0Xd,0Xc,15,0X000e,9,0X0008,11,10},{[0X0000]=0X00006,7,4,5,2,0X03,0,0X01,14,15,0X00c,OM,10,11,0X8,9},{[0]=7,6,0X5,0X4,0X03,0X002,0X1,0X000,15,fM,13,0X0000C,0xB,10,0X009,8},{[0]=0X008,0X009,0X0000a,11,12,13,0X000e,0Xf,0,0X1,2,3,VM,0X005,6,0X00007},{[0]=0x9,0x8,0x0b,0xA,13,12,0Xf,0XE,0X0001,0,0x3,2,0x5,4,0X7,0X6},{[0]=0x0000A,11,0X008,9,14,0Xf,vM,0X00d,0X2,0x00003,0x0,0X1,0X006,0X7,0X4,5},{[jM]=0Xb,LM,0X9,0X8,15,14,0XD,0Xc,UM,2,1,0,0X7,0X6,0X5,VM},{[jM]=12,13,0X000e,0X0000f,0X8,9,0XA,11,4,5,0x06,7,0X0,0X1,0X002,3},{[0]=13,0X0C,0Xf,fM,0x0009,0X8,11,10,0X5,0X0004,7,6,1,0X0,0X3,2},{[0X0]=14,0x000f,0Xc,13,LM,11,8,9,6,7,4,0X5,0X2,3,0x0,1},{[0X0]=0X0000F,0X0e,13,vM,0XB,LM,9,0X8,0X7,0x6,cM,0X4,3,0X002,uM,0X0}};do CM=0x0;end;local M,T,r,C,F=nil,nil,nil,nil,nil;while true do if not(CM<=0X00001)then do if not(CM<=0X2)then if CM~=0x00003 then T=l and l.band or function(wn,un)local Jn=2;while(true)do if Jn<=0X00 then un=un%O;Jn=0X01;else if Jn==0X1 then return((wn+un)-M(wn,un))/2;else do wn=wn%O;end;Jn=0X0;end;end;end;end;CM=0X3;else r=l and l[kM]or function(eO,SO)local hO=(2);while(true)do if not(hO<=0)then if hO==0X0001 then SO=SO%O;do hO=0;end;else eO=eO%O;hO=0x1;end;else return j-T(j-eO,j-SO);end;end;end;CM=1;end;else do F=l and l[zM];end;do break;end;end;end;else if CM==0X0 then M=l and l[tM]or function(th,eh)th=th%O;do eh=eh%O;end;local Mh=(0x1);local Yh,xh=0X0001,(0);repeat if Mh~=0X0 then while th>0x0 and eh>0 do local XP=(0X0);local GP,gP=nil,nil;while XP<0X002 do if XP==0X0 then GP=th%XM;XP=1;else gP=eh%0x10;XP=2;end;end;for cm=0,0X001 do if cm==0X0 then xh=xh+A[GP][gP]*Yh;else th=(th-GP)/0x10;end;end;XP=0x1;while XP<=0x00001 do do if XP~=0X0 then eh=(eh-gP)/0X00010;XP=0X00000;else Yh=Yh*16;XP=2;end;end;end;end;Mh=0;else do return xh+th*Yh+eh*Yh;end;end;until(false);end;CM=4;else C=l and l.bnot or function(sw)return j-(sw%O);end;CM=0X0002;end;end;end;local Y=(next);CM=0X1;local a,J=nil,(nil);while CM<=0X1 do if CM~=0X0 then do a=coroutine.yield;end;CM=0;else J=l and l[AM];CM=2;end;end;local D=tostring;F=F or function(kL,NL)if not(NL>=32)then else return 0;end;local FL=(0X000);while true do do if FL~=0x0 then return(kL*t[NL])%O;else do if NL<0 then return J(kL,-NL);end;end;FL=0x001;end;end;end;end;do J=J or function(Cd,Ld)local Id=nil;do for iN=0,0X3 do if not(iN<=0x1)then do if iN==2 then Id=(Cd%O/t[Ld]);else return Id-Id%0x1;end;end;else if iN==0 then if not(Ld>=0X20)then else return 0;end;elseif not(Ld<jM)then else return F(Cd,-Ld);end;end;end;end;end;end;local x=rawget;CM=1;local W,pM=nil,nil;while CM~=2 do if CM~=0X0 then W=function()local u1=(0X0);local m1=0X000;do while"*+"do local Dl=e(h,c,c);do c=c+0X1;end;m1=r(m1,F(T(Dl,0X07F),u1));if T(Dl,128)==0X000 then return m1;end;u1=u1+7;end;end;end;CM=0;else pM=V();CM=2;end;end;CM=2;local HM,PM,G=nil,nil,nil;while CM<=2 do if CM<=0x0 then do G=function()local l8=nil;local Z8=(2);repeat if Z8<=0X0 then return l8;else do if Z8==0x1 then if not(l8>U)then else return l8-O;end;do Z8=0;end;else do l8=W();end;do Z8=1;end;end;end;end;until(false);end;end;CM=0X3;else if CM==1 then PM=function(eh)local Zh=({e(h,c,c+0x03)});local th=(M(Zh[1],HM));local vh,Vh,Oh=nil,nil,nil;for OI=0,4 do if not(OI<=0X1)then if OI<=2 then Oh=M(Zh[0X4],HM);else if OI==3 then HM=(0x00089*HM+eh)%0X100;else do c=c+4;end;end;end;else if OI~=0 then Vh=M(Zh[3],HM);else vh=M(Zh[0X2],HM);end;end;end;return Oh*0X01000000+Vh*65536+vh*0X00100+th;end;CM=0X0;else HM=V();CM=1;end;end;end;local gM,H,DM={},assert,(uM);CM=0;local iM=nil;while CM<=1 do if CM==0X0 then iM=function(ft)local Vt=(L());local yt,Ft=1,(nil);repeat if yt<=0X0 then for Vn=1,Vt,7997 do local cn,Mn=nil,(nil);local En=0X3;while En<=0X04 do do if En<=1 then if En~=0 then Ft=Ft..w(B(Mn));En=5;else if cn>Vt then do cn=Vt;end;end;En=0X2;end;else if not(En<=2)then if En~=3 then for V9=uM,#Mn do local C9=(0x0);do repeat if C9~=0X00 then pM=(ft*pM+0x6d)%256;do C9=0X2;end;else Mn[V9]=M(Mn[V9],pM);C9=1;end;until C9>=2;end;end;En=0X01;else do cn=Vn+0X001F3d-0X001;end;do En=0;end;end;else Mn={e(h,c+Vn-uM,c+cn-0x01)};En=0X004;end;end;end;end;end;yt=2;else do if yt==1 then Ft="";yt=0;else do c=c+Vt;end;yt=3;end;end;end;until yt==0X0003;return Ft;end;CM=0X0001;else do CM=0x02;end;end;end;do CM=5;end;local KM,eM,wM=nil,nil,(nil);repeat if not(CM<=0x2)then do if not(CM<=3)then if CM==4 then do(gM)[0X001]=NM;end;CM=0x2;else function KM(on,En,Hn)local kn=En[1];local ln,Zn=En[5],En[0X9];local Cn=(En[0X00003]);local Tn=En[0X6];local Kn=(En[0X8]);local bn=En[2];local Sn=(En[4]);local Vn=o({},{__mode='v'});local An=(nil);An=function(...)local cd={};local ud=(0X1);local yd=(I and I()or _ENV);local bd=(yd==u and on or yd);local Ld={[0x1]=cd,[0X2]=En};local Od,fd=dM(...);Od=Od-1;local Dd=0;do for YE=0,Od do if not(Zn>YE)then do break;end;else cd[YE]=fd[YE+0X0001];end;end;end;do if not Kn then do fd=nil;end;elseif not(bn)then else(cd)[Zn]={n=Od>=Zn and Od-Zn+1 or 0X0000,B(fd,Zn+0X01,Od+0x001)};end;end;do if bd~=yd then if not(b)then do _ENV=bd;end;else(b)(An,bd);end;end;end;local md,Wd,ad,gd=d(function()while true do local cW=Cn[ud];local AW=(cW[4]);do ud=ud+1;end;if not(AW<46)then do if AW>=0x45 then if AW<81 then if AW<75 then if not(AW>=72)then do if not(AW>=0X46)then repeat local tU,YU=Vn,(cd);if not(#tU>0)then else local ld={};for Rc,Ic in Y,tU do for IF,tF in Y,Ic do if tF[1]==YU and tF[0X2]>=0 then local A_=(tF[0X00002]);if not ld[A_]then(ld)[A_]={YU[A_]};end;(tF)[0X001]=ld[A_];(tF)[0X0002]=0x0001;end;end;end;end;until true;return false,cW[0x7],Dd;else if AW==0X0047 then cd[cW[0X7]]=M(cd[cW[0X0006]],cd[cW[1]]);else do(cd)[cW[7]]=nil;end;end;end;end;else do if AW>=0x049 then if AW==74 then local FW=(cW[0X7]);(cd[FW])(cd[FW+1]);Dd=FW-0X00001;else(cd)[cW[7]]=true;end;else if cW[0x1]~=0x96 then if not(cd[cW[0X7]])then else ud=cW[6];end;else do ud=ud-0X1;end;(Cn)[ud]={[6]=(cW[6]-221),[7]=(cW[0X7]-221),[4]=87};end;end;end;end;else do if AW>=0X4e then if AW>=0X04F then do if AW==80 then(cd)[cW[0x7]]=cd[cW[6]]^cd[cW[0X0001]];else local N7=cW[7];local x7=(Q(function(...)a();for xs,Ds,Gs,ps,vs,Us,ss,as,zs,Is in...do a(true,{xs,Ds,Gs,ps,vs,Us,ss,as,zs,Is});end;end));(x7)(cd[N7],cd[N7+0X1],cd[N7+2]);Dd=N7;cd[N7]=x7;ud=cW[0X0006];end;end;else local Ts=cW[0X00007];local gs,ys,Ls=cd[Ts],cd[Ts+0X1],cd[Ts+0x2];cd[Ts]=Q(function()for rS=gs,ys,Ls do a(true,rS);end;end);ud=cW[6];end;else if AW<0X4C then do if not(not cd[cW[7]])then else ud=cW[6];end;end;else if AW==0X00004D then if not(cW[2]<=cd[cW[1]])then ud=cW[7];end;else local Ht=(cW[0X0007]);local bt,St=cd[Ht]();if bt then(cd)[Ht+0X1]=St;ud=cW[0X0006];end;end;end;end;end;end;else if not(AW<87)then if not(AW>=0X5a)then if not(AW>=88)then repeat local gs,ms=Vn,cd;if not(#gs>0X0)then else local sC={};for Fn,In in Y,gs do for yn,dn in Y,In do if dn[0x1]==ms and dn[0X00002]>=0 then local Hu=(dn[0x0002]);do if not sC[Hu]then do(sC)[Hu]={ms[Hu]};end;end;end;(dn)[1]=sC[Hu];dn[0X2]=0X0001;end;end;end;end;until true;return;else if AW~=89 then(cd)[cW[0X07]]=cd[cW[6]]~=cW[5];else do cd[cW[7]]=cd[cW[0X006]][cW[5]];end;end;end;else if AW>=91 then if AW==92 then if cW[1]==0X0De then do ud=ud-1;end;Cn[ud]={[4]=0x0003A,[7]=(cW[0x007]-12),[0X6]=(cW[6]-12)};elseif cW[1]==241 then ud=ud-0X1;Cn[ud]={[4]=87,[0X00006]=(cW[0X0006]-39),[0X7]=(cW[7]-39)};elseif cW[0X1]~=253 then local Fn=Od-Zn;local Dn=(cW[7]);do if not(Fn<0x0)then else Fn=-1;end;end;for zv=Dn,Dn+Fn do cd[zv]=fd[Zn+(zv-Dn)+0X01];end;do Dd=Dn+Fn;end;else ud=ud-0X1;(Cn)[ud]={[0X07]=(cW[7]-49),[0X00004]=0X2,[0X6]=(cW[6]-0x00031)};end;else local o4=(cW[7]);for A8=o4,o4+(cW[0X6]-0X00001)do(cd)[A8]=fd[Zn+(A8-o4)+1];end;end;else local Vz=cW[0X007];cd[Vz]=cd[Vz](B(cd,Vz+0X1,Dd));Dd=Vz;end;end;else if AW<0x54 then if AW<0x52 then if cW[1]==0X18 then ud=ud-1;Cn[ud]={[4]=0X5C,[0X0006]=(cW[0X6]-95),[7]=(cW[0X7]-95)};else(cd)[cW[0X07]]=fd[Zn+1];end;else if AW~=83 then local d3=(cW[6]);local S3=cW[7];do Dd=S3+d3-0x1;end;repeat local u0,F0=Vn,cd;if not(#u0>0)then else local fy=({});for PL,JL in Y,u0 do for Hr,Jr in Y,JL do if not(Jr[1]==F0 and Jr[0X0002]>=0)then else local Zx=Jr[2];do if not fy[Zx]then fy[Zx]={F0[Zx]};end;end;(Jr)[0X00001]=fy[Zx];Jr[2]=1;end;end;end;end;until true;do return true,S3,d3;end;else repeat local BO,PO=Vn,cd;if#BO>0 then local YL={};for sF,zF in Y,BO do for y1,h1 in Y,zF do if h1[1]==PO and h1[2]>=0 then local yo=h1[2];if not(not YL[yo])then else do(YL)[yo]={PO[yo]};end;end;h1[0X0001]=YL[yo];(h1)[2]=0x00001;end;end;end;end;until true;return true,cW[7],0X1;end;end;else if AW>=85 then if AW~=86 then if cd[cW[6]]~=cd[cW[0X01]]then ud=cW[7];end;else bd[cW[0X2]]=cd[cW[7]];end;else if cW[1]~=0X8F then do repeat local oG,qG=Vn,cd;if#oG>0 then local vi=({});do for ok,wk in Y,oG do do for r4,h4 in Y,wk do if h4[1]==qG and h4[0X2]>=0 then local Q0=h4[2];if not(not vi[Q0])then else vi[Q0]={qG[Q0]};end;do(h4)[1]=vi[Q0];end;(h4)[2]=1;end;end;end;end;end;end;until true;end;local YR=(cW[0X7]);return false,YR,YR+cW[6]-2;else ud=ud-1;(Cn)[ud]={[0x4]=69,[7]=(cW[7]-231),[6]=(cW[0x0006]-231)};end;end;end;end;end;else if not(AW<57)then if not(AW>=63)then if not(AW<0X3c)then if not(AW<0X3d)then if AW==62 then if not(cd[cW[0X006]]<=cW[5])then ud=cW[7];end;else local w_=cW[7];local a_,s_=cd[w_]();if not(a_)then else ud=cW[0X6];cd[w_+0X3]=s_;end;end;else do if cd[cW[0X06]]<=cd[cW[0X1]]then ud=cW[7];end;end;end;else if AW<0x03a then local Jd,Kd=cW[7],cd[cW[0X6]];cd[Jd+1]=Kd;(cd)[Jd]=Kd[cW[0X5]];else do if AW~=0X3b then(cd)[cW[7]]=-cd[cW[0X6]];else if not(not(cd[cW[0x6]]<cd[cW[0X00001]]))then else ud=cW[7];end;end;end;end;end;else if not(AW<0X042)then if not(AW<67)then do if AW==0X44 then if cW[1]==0X8 then do ud=ud-1;end;do Cn[ud]={[0X7]=(cW[7]-201),[6]=(cW[6]-201),[4]=0x46};end;elseif cW[1]==0x49 then ud=ud-1;(Cn)[ud]={[0X4]=34,[0X6]=(cW[6]-41),[7]=(cW[7]-41)};else for s0=cW[0x7],cW[0X0006]do do(cd)[s0]=nil;end;end;end;else local ZL=Hn[cW[6]];do(ZL[1])[ZL[2]]=cd[cW[0x7]];end;end;end;else do cd[cW[0X7]]=cd[cW[0X6]]==cd[cW[1]];end;end;else if not(AW<64)then if AW==0X41 then local sV=(cW[7]);local xV,wV=cd[sV]();if xV then do for p0=1,cW[0x1]do(cd)[sV+p0]=wV[p0];end;end;ud=cW[0X6];end;else local Dk=(cW[7]);local uk=(cd[Dk]);local rk=(cW[1]-0X001)*0X32;do for z8=1,cW[0x6]do(uk)[rk+z8]=cd[Dk+z8];end;end;end;else local XD=cW[6];cd[cW[7]]=cd[XD]..cd[XD+0X1];end;end;end;else if AW<0X00033 then if not(AW>=0X00030)then if AW==0X2F then cd[cW[7]]={B({},0X01,cW[0X00006])};else local GM=cW[7];do Dd=GM+cW[6]-0X1;end;(cd[GM])(B(cd,GM+1,Dd));Dd=GM-1;end;else do if not(AW<0X31)then if AW==50 then do(cd)[cW[0X0007]]=cd[cW[0X6]]*cd[cW[0X00001]];end;else if cW[1]==0X00009a then ud=ud-1;Cn[ud]={[0X4]=84,[0X00007]=(cW[7]-95),[0X6]=(cW[6]-95)};else cd[cW[7]]=not cd[cW[0X006]];end;end;else(cd)[cW[7]]=bd[cW[2]];end;end;end;else do if AW<54 then if not(AW<0x34)then if AW~=0X35 then(cd)[cW[0x007]]=gM[cW[6]];else cd[cW[7]]=cd[cW[6]]<=cd[cW[1]];end;else local lx,Lx=cW[7],(cW[0X001]-0X1)*0x0032;local dx=cd[lx];for W0=1,Dd-lx do do(dx)[Lx+W0]=cd[lx+W0];end;end;end;else if AW<0X00037 then if cd[cW[0X00006]]~=cW[0X5]then do ud=cW[7];end;end;else do if AW~=56 then do(cd[cW[0x7]])[cd[cW[0X6]]]=cd[cW[1]];end;else local jh=cW[7];cd[jh](cd[jh+0X1],cd[jh+2]);Dd=jh-1;end;end;end;end;end;end;end;end;end;else if AW<23 then if AW<11 then if not(AW>=0X5)then if AW>=2 then if AW>=0X3 then if AW==0X4 then(cd)[cW[7]]=cd[cW[6]]>=cd[cW[1]];else do(cd)[cW[7]]=false;end;end;else(cd)[cW[7]]=cd[cW[0X6]];end;else if AW==1 then cd[cW[0X00007]]=F(cd[cW[6]],cd[cW[0X1]]);else(cd)[cW[7]]=cd[cW[0X0006]]+cd[cW[0X001]];end;end;else if AW>=0x8 then if not(AW>=9)then do cd[cW[7]]=cd[cW[6]]~=cd[cW[1]];end;else if AW~=0XA then if cd[cW[6]]<cd[cW[0X00001]]then do ud=cW[7];end;end;else cd[cW[0x00007]]={};end;end;else if not(AW>=6)then(cd)[cW[0X7]]=C(cd[cW[0X6]]);else if AW~=0X7 then do cd[cW[0x7]]=cW[0x00002];end;else do cd[cW[7]]=cd[cW[6]]-cd[cW[0X1]];end;end;end;end;end;else if AW>=0X000011 then if not(AW<0X14)then if not(AW>=0X15)then local h2=(cW[0X7]);local s2,V2,k2=cd[h2]();if not(s2)then else(cd)[h2+0X1]=V2;(cd)[h2+2]=k2;ud=cW[6];end;else if AW==22 then cd[cW[0x07]]=cd[cW[6]]<cd[cW[0X00001]];else if not(cd[cW[6]]<=cd[cW[1]])then ud=cW[0X7];end;end;end;else if AW>=0X0012 then if AW~=0X013 then local AS=cW[0x00007];local ZS=Q(function(...)(a)();for qF in...do(a)(true,qF);end;end);ZS(cd[AS],cd[AS+0X1],cd[AS+2]);Dd=AS;(cd)[AS]=ZS;ud=cW[0X6];else Dd=cW[0X7];cd[Dd]();Dd=Dd-1;end;else local vL=Hn[cW[6]];do(cd)[cW[0X7]]=vL[0X00001][vL[0X02]];end;end;end;else if not(AW>=0XE)then if AW>=12 then if AW==0X0000d then do cd[cW[7]]=cd[cW[6]][cd[cW[0X01]]];end;else do if cd[cW[0X06]]~=cd[cW[1]]then else do ud=cW[0x0007];end;end;end;end;else local mg=(cW[0x07]);cd[mg]=cd[mg](cd[mg+0X1],cd[mg+0X2]);Dd=mg;end;else if AW<15 then do if cd[cW[0X006]]~=cW[0X5]then else ud=cW[0X7];end;end;else if AW~=16 then do(cd)[cW[7]]=cd[cW[6]]/cd[cW[1]];end;else local LS=cW[0X7];cd[LS](B(cd,LS+0X0001,Dd));Dd=LS-1;end;end;end;end;end;else if not(AW<0x00022)then if not(AW<40)then if AW>=0X02B then do if AW>=44 then if AW~=0X2d then(cd)[cW[7]]=#cd[cW[0X6]];else(cd[cW[7]])[cW[0X2]]=cW[0X5];end;else(cd[cW[0x0007]])[cW[0X2]]=cd[cW[1]];end;end;else do if AW>=41 then if AW~=42 then cd[cW[0X7]]=cd[cW[0X6]]%cd[cW[1]];else(Ld)[cW[0X6]]=cd[cW[0X7]];end;else do cd[cW[7]]=T(cd[cW[6]],cd[cW[0X00001]]);end;end;end;end;else if AW>=37 then do if AW>=0X26 then if AW==0x27 then do(gM)[cW[6]]=cd[cW[7]];end;else(cd)[cW[0X7]]=cd[cW[0x0006]]%cW[5];end;else(cd[cW[7]])[cd[cW[6]]]=cW[5];end;end;else do if not(AW<35)then if AW~=0X24 then local bb=(cW[0X06]);local eb=(cd[bb]);do for h2=bb+0X01,cW[0x1]do eb=eb..cd[h2];end;end;(cd)[cW[7]]=eb;else local Hu=cd[cW[6]]/cd[cW[0X0001]];(cd)[cW[7]]=Hu-Hu%1;end;else if cW[0X1]~=153 then do repeat local jz,Oz,rz=Vn,cd,(cW[0X7]);if not(#jz>0X0)then else local vi={};for JM,yM in Y,jz do for Jy,Ky in Y,yM do if Ky[1]==Oz and Ky[0X02]>=rz then local S9=Ky[0X0002];if not(not vi[S9])then else(vi)[S9]={Oz[S9]};end;Ky[0X00001]=vi[S9];(Ky)[0X00002]=1;end;end;end;end;until true;end;else ud=ud-1;Cn[ud]={[4]=0X5c,[0x07]=(cW[7]-252),[6]=(cW[0x6]-0X000FC)};end;end;end;end;end;else if not(AW>=28)then if AW>=0X19 then do if AW>=0X1a then if AW==27 then local y9,o9=cW[7],cW[6];if o9==0X000 then else Dd=y9+o9-0x1;end;local p9,l9,K9=cW[1],nil,(nil);do if o9==0x1 then l9,K9=dM(cd[y9]());else l9,K9=dM(cd[y9](B(cd,y9+0X1,Dd)));end;end;if p9==1 then do Dd=y9-1;end;else if p9==0 then do l9=l9+y9-0X1;end;do Dd=l9;end;else l9=y9+p9-2;do Dd=l9+1;end;end;local K2=(0X0);for um=y9,l9 do do K2=K2+1;end;cd[um]=K9[K2];end;end;else repeat local LP,tP=Vn,(cd);if not(#LP>0X00000)then else local r4=({});for pP,uP in Y,LP do for MJ,UJ in Y,uP do do if UJ[1]==tP and UJ[0x2]>=0X0 then local S0=(UJ[0X2]);do if not r4[S0]then do(r4)[S0]={tP[S0]};end;end;end;do(UJ)[1]=r4[S0];end;UJ[2]=0X1;end;end;end;end;end;until true;return true,cW[7],0x0000;end;else local oX=cW[0X7];local iX=(Q(function(...)a();for n0,D0 in...do a(true,n0,D0);end;end));(iX)(cd[oX],cd[oX+0X1],cd[oX+2]);Dd=oX;do(cd)[oX]=iX;end;do ud=cW[0X6];end;end;end;else if AW~=24 then Dd=cW[7];do(cd)[Dd]=cd[Dd]();end;else ud=cW[6];end;end;else do if AW<0X0001F then if not(AW<0X0001D)then if AW==0x1e then cd[cW[7]]=cd[cW[0x6]]>cd[cW[0X00001]];else do cd[cW[7]]=Ld[cW[0X6]];end;end;else do(cd)[cW[0X7]]=cW[0X2];end;end;else if AW>=32 then if AW~=33 then local OG=(ln[cW[0X06]]);local FG=(OG[7]);local QG=nil;local YG=(#FG);if YG>0X00 then QG={};for Aw=1,YG do local jw=FG[Aw];if jw[0X0001]~=0X00000 then(QG)[Aw-1]=Hn[jw[0X02]];else QG[Aw-0x00001]={cd,jw[0x2]};end;end;(S)(Vn,QG);end;cd[cW[0x7]]=KM(bd,OG,QG);else local Xh=(cW[0X007]);(cd)[Xh]=cd[Xh](cd[Xh+1]);Dd=Xh;end;else cd[cW[0x00007]]=r(cd[cW[6]],cd[cW[0X1]]);end;end;end;end;end;end;end;end;end);if not(md)then do if N(Wd)~="string"then(g)(Wd,0x00000);else do if not(q(Wd,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if q(Wd,"\094\046\045\058%\100+: ")then(g)('Lur\097\112h S\099\114i\112t:'..(Sn[ud-0X1]or"(internal)")..": "..D(Wd),0);else(g)(Wd,0X000);end;end;end;else do if Wd then if gd==1 then return cd[ad]();else return cd[ad](B(cd,ad+1,Dd));end;elseif ad then return B(cd,ad,gd);end;end;end;end;if not(b)then else(b)(An,on);end;return An;end;CM=1;end;else return KM(u,wM,lM)(...);end;end;else if not(CM<=0X0)then if CM==0X1 then function eM()local io,ho=nil,(nil);local Bo=5;local Oo={};local To=(0X00001);local ao={lM,lM,{},{},{},lM,lM,lM,lM};while(true)do if Bo<=2 then if Bo<=0X0 then ao[19]=L();do Bo=6;end;else if Bo==1 then do for KG=1,io do local kG=L();local YG=L();local wG=(L());for Sq=kG,YG do ao[VM][Sq]=wG;end;end;end;Bo=3;else ho={};Bo=4;end;end;else if not(Bo<=0X04)then if Bo~=5 then ao[MM]=L();Bo=2;else do io=L();end;do Bo=1;end;end;else if Bo==3 then ao[13]=V();do Bo=0X00000;end;else do(ao)[TM]=V();end;break;end;end;end;end;Bo=0;local mo,ro,eo=nil,nil,(nil);while Bo<0X9 do if not(Bo<=3)then if not(Bo<=0X05)then do if not(Bo<=6)then if Bo~=0x7 then for Ee=0,mo-0X1 do ro[Ee]=eM();end;Bo=7;else do ao[7]=ho;end;Bo=0x1;end;else do ro=ao[5];end;Bo=0X8;end;end;else if Bo==4 then ao[0X8]=X(eo,0X1,0X1)~=0x00;Bo=2;else eo=V();do Bo=0X4;end;end;end;else if Bo<=1 then do if Bo~=0X0 then for F9=1,W()do ho[F9]={V(),W()};end;Bo=3;else mo=L()-74778;Bo=6;end;end;else if Bo==0X2 then ao[2]=X(eo,0X02,0X1)~=jM;Bo=9;else do(ao)[10]=V();end;do Bo=0X5;end;end;end;end;end;(ao)[0X9]=W();Bo=0;local Co,Ko=nil,(nil);while(true)do if Bo~=0X0 then do Ko=L()-0X00015EC2;end;break;else Co={};Bo=1;end;end;do Bo=3;end;local Po,jo,xo=nil,nil,(nil);while(true)do if not(Bo<=1)then if not(Bo<=0X2)then if Bo==3 then Po=ao[0X00003];Bo=1;else(ao)[rM]=W();Bo=0x2;end;else jo=L()-19219;do Bo=0;end;end;else if Bo~=0 then for VX=0x1,Ko do(Po)[VX]={[VM]=W(),[rM]=G(),[3]=V(),[nM]=V(),[5]=V(),[0x7]=G(),[1]=G()};end;do Bo=0x04;end;else xo=V();break;end;end;end;local fo=(V()~=0x0);Bo=0x1;do repeat if Bo<=1 then if Bo==0 then(ao)[1]=W();Bo=0X002;else for AI=0X00001,jo do local BI,bI,nI,zI=nil,0X5,nil,(nil);do while bI~=7 do if bI<=2 then if not(bI<=0)then if bI==1 then if nI==0X99 then BI=true;elseif nI==0Xe then BI=K(iM(xo),z()+L());elseif nI==94 then BI=L();elseif nI==0x24 then BI=false;elseif nI==56 then BI=K(iM(xo),z()+L());elseif nI==246 then BI=K(iM(xo),0X2);elseif nI==8 then BI=K(iM(xo),L());elseif nI==221 then BI=k();elseif nI==0X33 then do BI=z();end;elseif nI==56 then BI=z();end;do bI=0X3;end;else(Oo)[AI-1]=To;bI=1;end;else if fo then local ui=(0);while ui<2 do if ui==0X00000 then NM[DM]=zI;do ui=1;end;else DM=DM+1;ui=0x00002;end;end;end;bI=7;end;else do if bI<=0X00004 then do if bI~=0X3 then do To=To+1;end;bI=0;else do zI={BI,{}};end;bI=6;end;end;else if bI~=0X5 then do(Co)[To]=zI;end;bI=0X00004;else do nI=V();end;bI=0X2;end;end;end;end;end;end;end;Bo=0;end;else if Bo~=2 then return ao;else for jI=0X00001,Ko do local JI=ao[0X00003][jI];for KQ,zQ in ipairs(y)do local oQ,tQ,SQ=1,nil,(nil);while oQ<=0x001 do do if oQ==0 then SQ=JI[tQ];oQ=0x002;else tQ=m[zQ];oQ=0x0;end;end;end;if SQ==1 then local I1,G1=0,nil;local n1=Oo[JI[zQ]];repeat do if I1==0X00000 then G1=Co[n1];I1=0X1;else if G1 then(JI)[tQ]=G1[0X0001];local Uk=G1[2];Uk[#Uk+1]={JI,tQ};end;do I1=0x2;end;end;end;until I1>=0X2;elseif SQ~=vM then else(JI)[zQ]=jI+JI[zQ]+0X1;end;end;end;do Bo=3;end;end;end;until(false);end;end;do CM=0X0;end;else do NM=nil;end;CM=3;end;else wM=eM();do CM=4;end;end;end;until false;end)('l\115h\105\102t',16,bit,string,0X000012,pcall,nilgetfenv,0,0X3,'r\115hif\116',"bxo\114",2,13,5,0X3FF,table,string.sub,1,12,unpack,0X00004,0XB,string.match,'\098or',tonumber,0X0000E,0Xa,string.char,setfenv,0x14,_ENV,{0X004A9a,0x00080e0e8AD,73268568,0Xe29bd69B,0x003D21e8Da,1431531209,0XE9cd8dd6,0x5885ABd4,1710812946},...);
